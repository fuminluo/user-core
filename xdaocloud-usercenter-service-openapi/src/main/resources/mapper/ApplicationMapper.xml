<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xdaocloud.framework.mapper.ApplicationMapper">
  <resultMap id="BaseResultMap" type="com.xdaocloud.framework.model.Application">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="code" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="remark" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="deleted" javaType="java.lang.Boolean" jdbcType="BIT" />
    </constructor>
  </resultMap>
  <resultMap id="FindAllApplicationResponse" type="com.xdaocloud.framework.dto.response.application.FindAllApplicationResponse">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="code" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="remark" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>


  <sql id="Base_Column_List">
    id, code, name, remark, update_time, create_time, deleted
  </sql>

  <sql id="4_Column_List">
    id, code, name, remark
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_application
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_application
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xdaocloud.framework.model.Application">
    insert into t_application (id, code, name, 
      remark, update_time, create_time, 
      deleted)
    values (#{id,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, 
      #{deleted,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.xdaocloud.framework.model.Application">
    insert into t_application
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xdaocloud.framework.model.Application">
    update t_application
    <set>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xdaocloud.framework.model.Application">
    update t_application
    set code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--精确搜索-->
  <select id="search" parameterType="com.xdaocloud.framework.dto.request.application.SearchApplicationRequest" resultMap="FindAllApplicationResponse">
    select a.name,a.code,a.id,a.remark
    from t_application as a
    where a.deleted = FALSE
    <if test="id != null">
      AND id = #{id}
    </if>
    <if test="code != null">
      AND  code LIKE CONCAT('%',#{code},'%')
    </if>
    <if test="name != null">
      AND  name LIKE CONCAT('%',#{name},'%')
    </if>
    <if test="remark != null">
      AND  remark LIKE CONCAT('%',#{remark},'%')
    </if>
  </select>


  <!-- 批量删除应用（逻辑删除） -->
  <update id="deleteApplication" parameterType="java.util.List">
    UPDATE t_application
    SET deleted = TRUE
    WHERE deleted = FALSE AND id IN
    <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
      #{item}
    </foreach>
  </update>

  <!-- 修改应用 -->
  <update id="updateApplicationById" parameterType="com.xdaocloud.framework.dto.request.application.UpdateApplicationRequest">
    update t_application
    <set>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER} AND deleted = FALSE
  </update>

  <!-- 解除用户和应用关系 -->
  <delete id="relieveUser" parameterType="java.util.List">
    DELETE FROM t_application_user
    WHERE user_id = #{userId} AND application_id IN
    <foreach item="item" index="index" collection="applicationIds" open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>

  <!-- 查询角色拥有的权限 -->
  <select id="findByUserId" parameterType="Long" resultType="com.xdaocloud.framework.dto.response.application.FindApplicationByUserIdRequest">
    SELECT
    a.id,a.code,a.name,a.remark,
    IF(
    (SELECT
    COUNT(*)
    FROM
    t_application_user au
    WHERE au.user_id = #{userId}
    AND au.application_id = a.id > 0),
    TRUE,
    FALSE
    ) AS selected
    FROM
    t_application a WHERE a.deleted = false
  </select>


</mapper>